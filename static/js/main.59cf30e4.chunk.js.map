{"version":3,"sources":["component/DistrictPicker/DistrictPicker.module.css","image/logo.png","image/loading_data.gif","component/ModalComponent/Modal.jsx","component/Cards/Cards.jsx","App.js","index.js","component/Cards/Cards.module.css","cropData.csv"],"names":["module","exports","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","height","width","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","props","classes","console","log","graphData","Modal","aria-labelledby","aria-describedby","className","open","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","chartType","loader","data","options","chart","title","cropName","subtitle","predictData","vAxis","root","maxWidth","media","IMG_MAP","Cards","city","useState","openDialog","setOpenDialog","setGraphData","cropList","split","styles","container","Grid","item","xs","map","crop","i","md","key","Card","card","CardActionArea","CardContent","src","Typography","variant","STATES","App","cropData","setCropData","selectedCity","setCity","loading","setLoading","csvData","setCsvData","a","axios","method","url","qs","stringify","location","headers","then","result","setTimeout","useEffect","fetchLocationData","csv","csvFile","alt","style","color","marginTop","state","index","onClick","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59cf30e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"DistrictPicker_formControl__I3Y39\",\"setDesign\":\"DistrictPicker_setDesign__3K2o_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.9b5ff494.png\";","module.exports = __webpack_public_path__ + \"static/media/loading_data.7f38a80e.gif\";","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Chart from \"react-google-charts\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n\n  console.log(\"props\", props.graphData);\n\n  const dummyData = [\n    [\"Year\", \"Yeild\"],\n    [\"1992\", 100],\n    [\"1993\", 200],\n    [\"2016\", 60],\n    [\"2017\", 90],\n  ];\n  console.log(\"Data\", props);\n\n  const handleClose = () => {\n    props.handleClose();\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.open}>\n          <Chart\n            width={\"500px\"}\n            height={\"300px\"}\n            chartType=\"Line\"\n            loader={<div>Loading Chart</div>}\n            data={props.graphData}\n            options={{\n              // Material design options\n              chart: {\n                title: \"Historic Data for \" + props.cropName,\n                subtitle:\n                  \"Predicted Yield for 2020 is \" +\n                  props.predictData +\n                  \" (Tonnes/Hectare)\",\n              },\n              vAxis: \"Yield(Tonnes/Hectare)\",\n            }}\n          />\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Card,\n  Typography,\n  Grid,\n  Button,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CardActions,\n} from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport cx from \"classnames\";\nimport Modal from \"../ModalComponent/Modal\";\nimport axios from \"axios\";\nimport regression from \"regression\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 200,\n  },\n});\n\nconst IMG_MAP = {\n  \"Potato\": \"https://www.macmillandictionary.com/external/slideshow/full/141151_full.jpg\",\n  \"Cauliflower\": \"https://www.producemarketguide.com/sites/default/files/Commodities.tar/Commodities/cauliflower_commodity-page.png\",\n  \"Bottle Gourd\": \"https://www.sowpure.shop/media/catalog/product/cache/97a5216251e24732e951d8cd0d62ef2c/s/o/sowpure-bottlegourd-1_4.jpg\",\n  \"Barley\": \"https://5.imimg.com/data5/YN/MK/MY-13902206/eurograins-barley-500x500.jpg\",\n  \"Guar seed\": \"https://ncdex.com/public/uploads/commodity/image/Guar-Seed-10-MT.jpg\",\n  \"Bean\": \"https://images.immediate.co.uk/production/volatile/sites/30/2020/02/Kidney-beans-8496667.jpg\",\n  \"Jute\": \"https://5.imimg.com/data5/RT/SO/MY-25065022/jute-fiber-500x500.jpg\",\n  \"Groundnut\\r\": \"https://images.delightedcooking.com/slideshow-mobile-small/peanuts-against-white-background.jpg\",\n  \"Cardamom\": \"https://cdn.britannica.com/20/234020-050-8BC4A9C6/cardamom-seed-pods.jpg\",\n  \"Carrot\": \"https://m.media-amazon.com/images/I/51mUwdp2THL._SL1100_.jpg\",\n  \"Lentil\": \"https://i0.wp.com/post.medicalnewstoday.com/wp-content/uploads/sites/3/2019/11/lentils-in-a-jug-and-on-a-spoon.jpg?w=1155&h=1734\",\n}\n\n\nexport default function Cards({ data, city }) {\n  const classes = useStyles();\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [graphData, setGraphData] = useState();\n  const [predictData, setPredictData] = useState();\n  const [cropName, setCropName] = useState();\n  const cropList = data.split(\",\");\n\n  const fetchGraphData = async (crop) => {\n    try {\n      await axios({\n        method: \"get\",\n        url: `http://localhost:3000/${city}?crop=${crop}`,\n      }).then((result) => {\n        var res = [];\n        var predictData = [];\n        result.data.map((x, index) => {\n          res.push([\"Year\", \"Yield (Tonnes/Hectare)\"]);\n          console.log(\"result if push\", res);\n\n          x.data.map((y, i) => {\n            for (var j = 0; j < y.Year.length; j++) {\n              res.push([y.Year[j], y.value[j]]);\n              predictData.push([y.Year[j], y.value[j]]);\n            }\n          });\n        });\n\n        res.forEach((element) => {\n          element[0] = String(element[0]);\n        });\n\n        setGraphData(res);\n        console.log(\"Data to be analysed \", predictData);\n        const predictResult = regression.linear(predictData, {\n          order: 2,\n          precision: 2,\n        });\n        // const gradient = predictResult.equation[0];\n        // const yIntercept = predictResult.equation[1];\n        const prediction = predictResult.predict(2020);\n        // const totalY = gradient * 2020 + yIntercept;\n        console.log(\"Prediction value\", prediction[1]);\n        setPredictData(prediction[1]);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOpenDialog = (crop) => {\n    fetchGraphData(crop);\n    setCropName(crop);\n    setOpenDialog(true);\n  };\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            {cropList &&\n              cropList.map((crop, i) => (\n                <Grid item xs={12} md={3} key={i} className=\"text-center\">\n                  <Card className={styles.card}>\n                    <CardActionArea>\n                      <CardContent>\n                        <img\n                          src={IMG_MAP[crop]}\n                          className={classes.media}\n                          title={crop}\n                          \n                        />\n                        <Typography variant=\"h4\">{crop}</Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      {openDialog && (\n        <Modal\n          open={openDialog}\n          handleClose={() => {\n            setOpenDialog(false);\n            setGraphData();\n          }}\n          graphData={graphData}\n          cropName={cropName}\n          predictData={predictData}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Cards from \"./component/Cards/Cards\";\nimport styles from \"./component/DistrictPicker/DistrictPicker.module.css\";\nimport qs from \"qs\";\nimport Modal from \"./component/ModalComponent/Modal\";\nimport { csv } from \"d3\";\nimport csvFile from \"./cropData.csv\";\nimport Logo from \"./image/logo.png\";\nimport LoadingGif from \"./image/loading_data.gif\";\n\nconst STATES = [\n  \"Agartala\",\n]\n\nfunction App() {\n  const [cropData, setCropData] = useState();\n  const [selectedCity, setCity] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [csvData, setCsvData] = useState();\n\n  async function fetchLocationData(props) {\n    try {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/location\",\n        data: qs.stringify({\n          location: selectedCity,\n        }),\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        },\n      }).then((result) => {\n        setTimeout(() => {\n          setLoading(false);\n          setCropData(result.data)\n        }, 3000)\n      });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if(selectedCity) {\n      setLoading(true);\n      fetchLocationData();\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    csv(csvFile).then((data) => {\n      setCsvData(data);\n    });\n  }, [])\n\n  return (\n    <div>\n      <nav>\n        <img src={\"https://firebasestorage.googleapis.com/v0/b/womensafety-7a788.appspot.com/o/logo.png?alt=media&token=6aae4727-eb92-4e65-9703-0fbf4afff611\"} alt=\"logo\" width={55} height={55}/>\n        <h3 style={{color: \"orange\", marginTop: 10}}>Agri ML</h3>\n      </nav>\n      <div className=\"content text-start\">\n        <h1 className=\"font\">Select Capital City to Generate ML Analysis</h1>\n        <p>We have added the historical data of these states and our ML system is capable of generating anlytical report of crop yeild based on it.</p>\n        <div style={{display: \"flex\"}}>\n          {\n            STATES.map((state, index) => {\n              return (\n                <span key={index} onClick={(e) => {\n                  setCity(state)\n                  setLoading(true)\n                  }}\n                  className={`bdg ${state === selectedCity ? \"bdg-on\" : \"bdg-off\"}`}\n                >\n                  {state}\n                </span>\n              )\n            })\n          }\n        </div>\n      <Modal data={csvData} />\n\n      {\n        selectedCity ? \n          loading ? (\n            <div className=\"text-center mt-30\">\n              <img src={\"https://firebasestorage.googleapis.com/v0/b/womensafety-7a788.appspot.com/o/loading_data.gif?alt=media&token=1d98c2b9-af19-4172-8dcd-14ae4703129f\"} alt=\"loading\" width={550}/> <br/>\n            </div>\n          ) : (\n            <Cards data={cropData ? cropData : \"\"} city={selectedCity} />\n          ) : null\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1OD74\",\"card\":\"Cards_card__2zZAL\"};","module.exports = __webpack_public_path__ + \"static/media/cropData.8698e162.csv\";"],"sourceRoot":""}